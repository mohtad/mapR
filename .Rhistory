p<-create_map(data, shape_zcta, shape_roads,zcta, map_center,  dist_center, locations, legend_title, zoom)
p
p
devtools::load_all()
devtools::install()\
devtools::load_all()
devtools::install()
p<-create_map(data, shape_zcta, shape_roads,zcta, map_center,  dist_center, locations, legend_title, zoom)
p
?geom_point
devtools::load_all()
devtools::install()
p<-create_map(data, shape_zcta, shape_roads,zcta, map_center,  dist_center, locations, legend_title, zoom)
p
devtools::load_all()
devtools::install()
p<-create_map(data, shape_zcta, shape_roads,zcta, map_center,  dist_center, locations, legend_title, zoom)
p
p
devtools::load_all()
devtools::install()
devtools::load_all()
devtools::install()
drv = JDBC("com.teradata.jdbc.TeraDriver","C:\\dev\\apache-tomcat-7.0.56\\lib\\terajdbc4.jar;C:\\dev\\apache-tomcat-7.0.56\\lib\\tdgssconfig.jar")
conn = dbConnect(drv,"jdbc:teradata://tdprd.dw.bizsys.tmcs","mnadjar","mnadjar")
data =dbGetQuery(conn,"SELECT
report,
postal_code as zipcode,
cust_2016_all,   	     -- 2016 Singles - All
cust_2016_new,   	-- 2016 Singles - New Customers
cust_2016_returning,  --- 2016 Singles - Returning Customers
cust_2016_reactivated   --- 2016 Singles - Reactivated Customers
FROM plasb.kc_2016_zip_report
;
")
# the location of the venue
locations = data.frame(name=c("Children's Mercy Park", "toto", "toto2", "toto3"), long = c(-94.823686, -94.823686, -94.823686, -94.823686), lat = c(39.121296,39.121296,39.121296,39.121296) )
# project in mercator axis system
#locations$mer_long = mercator(c(locations$long,locations$lat))[1]
#locations$mer_lat = mercator(c(locations$long,locations$lat))[2]
#
map_center = data.frame(long = c(-94.823686), lat = c(39.121296) )
#
#Compute zip 'distance to' venue
#
data$bin <- add_bins(data,"cust_2016_all", br = c(-1,0,1,5,12,50,198), lab=c("0","1","2 to 5","6 to 12","13 to 50","51 to 198"))
shape_us_zcta_dir = "C:/Users/Mohtadi.Nadjar/heatmapR/Template/shape/zcta/us/cb_2015_us_zcta510_500k"
shape_us_zcta_filename = "cb_2015_us_zcta510_500k"
Shape_US_Roads_dir = "C:/Users/Mohtadi.Nadjar/heatmapR/Template/shape/roads/us/tl_2016_us_primaryroads"
Shape_US_Roads_filename = "tl_2016_us_primaryroads"
us_zcta_path = "C:/Users/Mohtadi.Nadjar/heatmapR/Template/zcta_coordinates/2015_Gaz_zcta_national.txt"
shape_zcta<-load_shape_us_zcta(shape_us_zcta_dir, shape_us_zcta_filename)
shape_roads<-load_shape_us_roads(Shape_US_Roads_dir, Shape_US_Roads_filename)
zcta<-load_us_zcta(us_zcta_path, map_center)
dist_center<-25
legend_title<-'All Singles'
zoom<-10
p<-create_map(data, shape_zcta, shape_roads,zcta, map_center,  dist_center, locations, legend_title, zoom)
p
p
p
?openmap
?osm
?openmap
?autoplot
devtools::load_all()
devtools::install()
p<-create_map(data, shape_zcta, shape_roads,zcta, map_center,  dist_center, locations, legend_title, zoom)
p
?load_all
?coord_fixed
?oord_cartesian
?coord_cartesian
devtools::load_all()
devtools::install()
p<-create_map(data, shape_zcta, shape_roads,zcta, map_center,  dist_center, locations, legend_title, zoom)
p
devtools::load_all()
devtools::install()
p<-create_map(data, shape_zcta, shape_roads,zcta, map_center,  dist_center, locations, legend_title, zoom)
p
p<-create_map(data, shape_zcta, shape_roads,zcta, map_center,  dist_center, locations, legend_title, zoom, FALSE)
p
p<-create_map(data, shape_zcta, shape_roads,zcta, map_center,  100, locations, legend_title, zoom, FALSE)
p
devtools::load_all()
devtools::install()
p<-create_map(data, shape_zcta, shape_roads,zcta, map_center,  dist_center, locations, legend_title, zoom, FALSE)
p
devtools::load_all()
devtools::install()
source('~/heatmapR/Template_heatmapR_step2_20161205.R')
devtools::load_all()
devtools::install()
color_bins<-c("#ececec","#fcc5c0","#fa9fb5","#f768a1","#c51b8a","#7a0177")
p<-create_map(data, shape_zcta, shape_roads,zcta, map_center,  dist_center, locations, legend_title, zoom, color_bins, FALSE)
p
devtools::load_all()
devtools::install()
p<-create_map(data, shape_zcta, shape_roads,zcta, map_center,  dist_center, locations, legend_title, zoom, color_bins, FALSE)
p
install.packages("foreign")
library(foreign)
file.choose()
dataset = read.spss("C:\\Users\\Mohtadi.Nadjar\\Desktop\\ICE_SHOW_v2.sav", to.data.frame=TRUE)
dataset = read.spss("C:\\Users\\Mohtadi.Nadjar\\Desktop\\ICE_SHOW_v2.sav", header = TRUE)
?read.spss
weight_age_gender = data.frame(weight = c(0.955,
1.528,
0.816,
0.929,
1.497,
0.972,
1.253,
0.883,
0.918,
1.290,
0.609,
1.045
)
)
View(weight_age_gender)
install.packages("numbers")
weight_age_gender$weight = weight_age_gender$weight*1000
library(numbers)
?mGCD
toto = mGCD(weight_age_gender$weight)
GCD(weight_age_gender$weight[1],weight_age_gender$weight[2])
?apply
?read.csv
nba_games_2015<- read.csv("C:/Users/Mohtadi.Nadjar/Desktop/NBA Project/nba_games_2015-2016.txt", sep = "")#, colClasses=c("GEOID"="character"))
View(nba_games_2015)
nba_games_2015<- read.csv("C:/Users/Mohtadi.Nadjar/Desktop/NBA Project/nba_games_2015-2016.txt", sep = ",")#, colClasses=c("GEOID"="character"))
View(nba_games_2015)
nba_games_2015<- read.csv("C:/Users/Mohtadi.Nadjar/Desktop/NBA Project/nba_games_2015-2016.txt", sep = ",", colClasses=c("Datetime"="POSIXct"))
nba_games_2015<- read.csv("C:/Users/Mohtadi.Nadjar/Desktop/NBA Project/nba_games_2015-2016.txt", sep = ",", colClasses=c("POSIXct", "Factor", "Factor", "Factor", "Factor"))
nba_games_2015<- read.csv("C:/Users/Mohtadi.Nadjar/Desktop/NBA Project/nba_games_2015-2016.txt", sep = ",", colClasses=c("Factor", "Factor", "Factor", "Factor", "Factor"))
nba_games_2015<- read.csv("C:/Users/Mohtadi.Nadjar/Desktop/NBA Project/nba_games_2015-2016.txt", sep = ",", colClasses=c("factor", "factor", "factor", "factor", "factor"))
nba_games_2015<- read.csv("C:/Users/Mohtadi.Nadjar/Desktop/NBA Project/nba_games_2015-2016.txt", sep = ",", colClasses=c("posixct", "factor", "factor", "factor", "factor"))
?within
nba_games_2015$Datetime<-  as.POSIXlt(nba_games_2015$Datetime, format = "%m/%e/%y %I:%M %p"))
nba_games_2015$Datetime<-  as.POSIXlt(nba_games_2015$Datetime, format = "%m/%e/%y %I:%M %p")
View(nba_games_2015)
nba_games_2015<- read.csv("C:/Users/Mohtadi.Nadjar/Desktop/NBA Project/nba_games_2015-2016.txt", sep = ",")
nba_games_2015$DatetimeNew<-  as.POSIXlt(nba_games_2015$Datetime, format = "%m/%e/%y %I:%M %p")
View(nba_games_2015)
?aggregate
nba_games_2015<- read.csv("C:/Users/Mohtadi.Nadjar/Desktop/NBA Project/nba_games_2015-2016.txt", sep = ",")
nba_games_2015$Datetime<-  as.POSIXlt(nba_games_2015$Datetime, format = "%m/%e/%y %I:%M %p")
aggregate(nba_games_2015, by=list(nba_games_2015$Home.Location), FUN=count)
aggregate(nba_games_2015, by=list(nba_games_2015$Home.Location), FUN=length)
?ddply
library("plyr", lib.loc="~/R/win-library/3.3")
?ddply
aggregate(nba_games_2015, Home.Location, FUN=length)
aggregate(nba_games_2015, nba_games_2015$Home.Location, FUN=length)
aggregate(nba_games_2015, ~Home.Location, FUN=length)
ddply(nba_games_2015, ~Home.Location, FUN=length)
ddply(nba_games_2015, ~Home.Location, FUN=count)
ddply(nba_games_2015, .(Home.Location), FUN=count)
ddply(nba_games_2015, .(Home.Location), nrow)
ddply(nba_games_2015, ~(Home.Location), nrow)
aggregate(nba_games_2015, by=list(nba_games_2015$Home.Location), FUN=length)
nba_games_2015[nba_games_2015$Home.Location='Los Angeles',]
nba_games_2015[nba_games_2015$Home.Location=='Los Angeles',]
toto=nba_games_2015[nba_games_2015$Home.Location=='Los Angeles',]
View(toto)
toto=nba_games_2015[nba_games_2015$Away.Location=='Los Angeles',]
View(toto)
library("RODBC", lib.loc="~/R/win-library/3.3")
library("RJDBC", lib.loc="~/R/win-library/3.3")
drv = JDBC("com.teradata.jdbc.TeraDriver","C:\\dev\\apache-tomcat-7.0.56\\lib\\terajdbc4.jar;C:\\dev\\apache-tomcat-7.0.56\\lib\\tdgssconfig.jar")
conn = dbConnect(drv,"jdbc:teradata://tdprd.dw.bizsys.tmcs","mnadjar","mnadjar")
nba_data =dbGetQuery(conn,"SELECT * from plasb.mo_nba_tkt;")
?aggregate
aggregate(nba_data$Tkt_Face_Val_Amt, by=list(nba_data$atrcn_nm), FUN="median")
aggregate(nba_data$Tkt_Face_Val_Amt, by=list(nba_data$atrcn_nm), FUN="mean")
nba_data_agg =dbGetQuery(conn,"SELECT atrcn_nm, Sect_Name, Row_Num, Seat_Num, avg(Tkt_Face_Val_Amt) as Tkt_Face_Val_Amt from plasb.mo_nba_tkt group by 1,2,3,4 ;")
nba_data_agg =dbGetQuery(conn,"SELECT atrcn_nm, Sect_Name, Row_Num, Seat_Num, avg(Tkt_Face_Val_Amt) as Tkt_Face_Val_Amt, count(*) as Tkt_Sold from plasb.mo_nba_tkt group by 1,2,3,4 ;")
p <- ggplot(nba_data_agg, aes(Tkt_Face_Val_Amt))
p <- p + geom_histogram()
library("ggplot2", lib.loc="~/R/win-library/3.3")
p <- ggplot(nba_data_agg, aes(Tkt_Face_Val_Amt))
p <- p + geom_histogram()
p
p <- p + facet_wrap( ~ atrcn_nm, scale = "free")
p
p <- ggplot(nba_data_agg[nba_data_agg<=500,], aes(Tkt_Face_Val_Amt))
p <- p + geom_histogram()
p <- p + facet_wrap( ~ atrcn_nm, scale = "free")
p
p <- ggplot(nba_data_agg[nba_data_agg$Tkt_Face_Val_Amt<=500,], aes(Tkt_Face_Val_Amt))
p <- p + geom_histogram()
p <- p + facet_wrap( ~ atrcn_nm, scale = "free")
p
p <- ggplot(nba_data_agg[nba_data_agg$Tkt_Face_Val_Amt<=500,], aes(Tkt_Face_Val_Amt))
p <- p + geom_histogram()
p <- p + facet_wrap( ~ atrcn_nm)
p
p <- ggplot(nba_data_agg[nba_data_agg$Tkt_Face_Val_Amt<=500,], aes(Tkt_Face_Val_Amt, fill=Tkt_Sold))
p <- p + geom_histogram()
p <- p + facet_wrap( ~ atrcn_nm)
p
nba_data_agg$Tkt_Sold2 = as.factor(nba_data_agg$Tkt_Sold)
p <- ggplot(nba_data_agg[nba_data_agg$Tkt_Face_Val_Amt<=500,], aes(Tkt_Face_Val_Amt, fill=Tkt_Sold2))
p <- p + geom_histogram()
p <- p + facet_wrap( ~ atrcn_nm)
p
p <- ggplot(nba_data[nba_data$Tkt_Face_Val_Amt<=500,], aes(Tkt_Face_Val_Amt))
p <- p + geom_histogram()
p <- p + facet_wrap( ~ atrcn_nm)
p
?bins
library("binr", lib.loc="~/R/win-library/3.3")
cuts<-bins(nba_data_agg$Tkt_Face_Val_Amt,target.bins =5, minpts = 1)
cuts$breaks <- bins.getvals(cuts)
add_bins<-function(data,nbins=6){
if(!is.null(br) && !is.null(lab)){
breakss<-br
labelss<-lab
}
else{
cuts<-bins(data,target.bins =nbins, minpts = 1)
cuts$breaks <- bins.getvals(cuts)
breakss<-numeric(nbins+1)
labelss<-character(nbins)
for(i in 1:nbins){
low = attr(cuts$breaks, "binlo")[i]
hi=attr(cuts$breaks, "binhi")[i]
if(low==hi){
labelss[i]<-as.character(low)
}
else{
labelss[i]<-paste(c(low, hi), collapse = " to ")
}
if(i==1){
breakss[1]<-low-1
breakss[2]<-hi
}else{
breakss[i+1]<-hi
}
}
}
retur
cuts <- add_bins(nba_data_agg$Tkt_Face_Val_Amt,6)
add_bins<-function(data,nbins=6){
if(!is.null(br) && !is.null(lab)){
breakss<-br
labelss<-lab
}
else{
cuts<-bins(data,target.bins =nbins, minpts = 1)
cuts$breaks <- bins.getvals(cuts)
breakss<-numeric(nbins+1)
labelss<-character(nbins)
for(i in 1:nbins){
low = attr(cuts$breaks, "binlo")[i]
hi=attr(cuts$breaks, "binhi")[i]
if(low==hi){
labelss[i]<-as.character(low)
}
else{
labelss[i]<-paste(c(low, hi), collapse = " to ")
}
if(i==1){
breakss[1]<-low-1
breakss[2]<-hi
}else{
breakss[i+1]<-hi
}
}
}
return(cut(data, breaks=breakss, labels=labelss))
}
?bins
cuts <- add_bins(nba_data_agg$Tkt_Face_Val_Amt,6)
add_bins<-function(data,nbins=6){
cuts<-bins(data,target.bins =nbins, minpts = 1)
cuts$breaks <- bins.getvals(cuts)
breakss<-numeric(nbins+1)
labelss<-character(nbins)
for(i in 1:nbins){
low = attr(cuts$breaks, "binlo")[i]
hi=attr(cuts$breaks, "binhi")[i]
if(low==hi){
labelss[i]<-as.character(low)
}
else{
labelss[i]<-paste(c(low, hi), collapse = " to ")
}
if(i==1){
breakss[1]<-low-1
breakss[2]<-hi
}else{
breakss[i+1]<-hi
}
}
return(cut(data, breaks=breakss, labels=labelss))
}
cuts <- add_bins(nba_data_agg$Tkt_Face_Val_Amt,6)
nba_data_agg$cuts <- add_bins(nba_data_agg$Tkt_Face_Val_Amt,6)
View(nba_data)
View(nba_data_agg)
add_bins<-function(data,nbins=6){
cuts<-bins(data,target.bins =nbins, minpts = 1)
cuts$breaks <- bins.getvals(cuts)
breakss<-numeric(nbins+1)
labelss<-character(nbins)
for(i in 1:nbins){
low = round(attr(cuts$breaks, "binlo")[i])
hi=round(attr(cuts$breaks, "binhi")[i])
if(low==hi){
labelss[i]<-as.character(low)
}
else{
labelss[i]<-paste(c(low, hi), collapse = " to ")
}
if(i==1){
breakss[1]<-low-1
breakss[2]<-hi
}else{
breakss[i+1]<-hi
}
}
return(cut(data, breaks=breakss, labels=labelss))
}
nba_data_agg$cuts <- add_bins(nba_data_agg$Tkt_Face_Val_Amt,6)
View(nba_data_agg)
nba_data_agg2 = nba_data_agg[nba_data_agg$Tkt_Face_Val_Amt<500,]
nba_data_agg2$cuts <- add_bins(nba_data_agg2$Tkt_Face_Val_Amt,6)
View(nba_data_agg2)
toto = aggregate(nba_data_agg2, by=list(nba_data_agg2$atrcn_nm,nba_data_agg2$cuts ), FUN="length")
View(toto)
g <- ggplot(nba_data_agg2, aes(cuts))
g + geom_bar()
g <- ggplot(nba_data_agg2, aes(cuts))
g <- g + facet_wrap( ~ atrcn_nm)
g + geom_bar()
nba_data_agg2$cuts <- add_bins(nba_data_agg2$Tkt_Face_Val_Amt,10)
toto = aggregate(nba_data_agg2, by=list(nba_data_agg2$atrcn_nm,nba_data_agg2$cuts ), FUN="length")
g <- ggplot(nba_data_agg2, aes(cuts))
g <- g + facet_wrap( ~ atrcn_nm)
g + geom_bar()
g <- g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + geom_bar()
nba_data2 = nba_data_agg[nba_data$Tkt_Face_Val_Amt<500,]
nba_data2$cuts <- add_bins(nba_data2$Tkt_Face_Val_Amt,10)
toto = aggregate(nba_data2, by=list(nba_data2$nba_data2,nba_data2$cuts ), FUN="length")
g <- ggplot(nba_data2, aes(cuts))
g <- g + facet_wrap( ~ atrcn_nm)
g <- g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + geom_bar()
nba_data2 = nba_data_agg[nba_data$Tkt_Face_Val_Amt<500,]
nba_data2$cuts <- add_bins(nba_data2$Tkt_Face_Val_Amt,10)
nba_data2 = nba_data_agg[is.na(nba_data$Tkt_Face_Val_Amt),]
nba_data2 = nba_data[nba_data$Tkt_Face_Val_Amt<500,]
nba_data2$cuts <- add_bins(nba_data2$Tkt_Face_Val_Amt,10)
toto = aggregate(nba_data2, by=list(nba_data2$nba_data2,nba_data2$cuts ), FUN="length")
g <- ggplot(nba_data2, aes(cuts))
g <- g + facet_wrap( ~ atrcn_nm)
g <- g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + geom_bar()
library("RODBC")
library("RJDBC")
drv = JDBC("com.teradata.jdbc.TeraDriver","C:\\dev\\apache-tomcat-7.0.56\\lib\\terajdbc4.jar;C:\\dev\\apache-tomcat-7.0.56\\lib\\tdgssconfig.jar")
conn = dbConnect(drv,"jdbc:teradata://tdprd.dw.bizsys.tmcs","mnadjar","mnadjar")
nba_data =dbGetQuery(conn,"SELECT * from plasb.mo_nba_tkt;")
nba_data_agg =dbGetQuery(conn,"SELECT atrcn_nm, Sect_Name, Row_Num, Seat_Num, avg(Tkt_Face_Val_Amt) as Tkt_Face_Val_Amt, count(*) as Tkt_Sold from plasb.mo_nba_tkt group by 1,2,3,4 ;")
library("binr")
add_bins<-function(data,nbins=6){
cuts<-bins(data,target.bins =nbins, minpts = 1)
cuts$breaks <- bins.getvals(cuts)
breakss<-numeric(nbins+1)
labelss<-character(nbins)
for(i in 1:nbins){
low = round(attr(cuts$breaks, "binlo")[i])
hi=round(attr(cuts$breaks, "binhi")[i])
if(low==hi){
labelss[i]<-as.character(low)
}
else{
labelss[i]<-paste(c(low, hi), collapse = " to ")
}
if(i==1){
breakss[1]<-low-1
breakss[2]<-hi
}else{
breakss[i+1]<-hi
}
}
return(cut(data, breaks=breakss, labels=labelss))
}
nba_data_agg2 = nba_data_agg[nba_data_agg$Tkt_Face_Val_Amt<500,]
nba_data_agg2$cuts <- add_bins(nba_data_agg2$Tkt_Face_Val_Amt,10)
toto = aggregate(nba_data_agg2, by=list(nba_data_agg2$atrcn_nm,nba_data_agg2$cuts ), FUN="length")
g <- ggplot(nba_data_agg2, aes(cuts))
g <- g + facet_wrap( ~ atrcn_nm)
g <- g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + geom_bar()
nba_data2 = nba_data[nba_data$Tkt_Face_Val_Amt<500,]
nba_data2$cuts <- add_bins(nba_data2$Tkt_Face_Val_Amt,10)
toto = aggregate(nba_data2, by=list(nba_data2$nba_data2,nba_data2$cuts ), FUN="length")
g <- ggplot(nba_data2, aes(cuts))
g <- g + facet_wrap( ~ atrcn_nm)
g <- g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + geom_bar()
library("ggplot2")
nba_data_agg2 = nba_data_agg[nba_data_agg$Tkt_Face_Val_Amt<500,]
nba_data_agg2$cuts <- add_bins(nba_data_agg2$Tkt_Face_Val_Amt,10)
toto = aggregate(nba_data_agg2, by=list(nba_data_agg2$atrcn_nm,nba_data_agg2$cuts ), FUN="length")
g <- ggplot(nba_data_agg2, aes(cuts))
g <- g + facet_wrap( ~ atrcn_nm)
g <- g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + geom_bar()
nba_data2 = nba_data[nba_data$Tkt_Face_Val_Amt<500,]
nba_data2$cuts <- add_bins(nba_data2$Tkt_Face_Val_Amt,10)
toto = aggregate(nba_data2, by=list(nba_data2$nba_data2,nba_data2$cuts ), FUN="length")
g <- ggplot(nba_data2, aes(cuts))
g <- g + facet_wrap( ~ atrcn_nm)
g <- g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + geom_bar()
?cut
library("RODBC")
library("RJDBC")
library("ggplot2")
drv = JDBC("com.teradata.jdbc.TeraDriver","C:\\dev\\apache-tomcat-7.0.56\\lib\\terajdbc4.jar;C:\\dev\\apache-tomcat-7.0.56\\lib\\tdgssconfig.jar")
conn = dbConnect(drv,"jdbc:teradata://tdprd.dw.bizsys.tmcs","mnadjar","mnadjar")
nba_data =dbGetQuery(conn,"SELECT * from plasb.mo_nba_tkt;")
nba_data_agg =dbGetQuery(conn,"SELECT atrcn_nm, Sect_Name, Row_Num, Seat_Num, avg(Tkt_Face_Val_Amt) as Tkt_Face_Val_Amt, count(*) as Tkt_Sold from plasb.mo_nba_tkt group by 1,2,3,4 ;")
nba_resale_data =dbGetQuery(conn,"SELECT * from plasb.mo_nba_tkt_resale;")
nba_resale_data =dbGetQuery(conn,"SELECT * from plasb.mo_nba_tkt_resale;")
library("binr")
add_bins<-function(data,nbins=6){
cuts<-bins(data,target.bins =nbins, minpts = 1)
cuts$breaks <- bins.getvals(cuts)
breakss<-numeric(nbins+1)
labelss<-character(nbins)
for(i in 1:nbins){
low = round(attr(cuts$breaks, "binlo")[i])
hi=round(attr(cuts$breaks, "binhi")[i])
if(low==hi){
labelss[i]<-as.character(low)
}
else{
labelss[i]<-paste(c(low, hi), collapse = " to ")
}
if(i==1){
breakss[1]<-low-1
breakss[2]<-hi
}else{
breakss[i+1]<-hi
}
}
return(cut(data, breaks=breakss, labels=labelss))
}
nba_data2 = nba_data[nba_data$Tkt_Face_Val_Amt<500,]
nba_data2$cuts <- add_bins(nba_data2$Tkt_Face_Val_Amt,10)
?list
add_bins<-function(data,nbins=6){
cuts<-bins(data,target.bins =nbins, minpts = 1)
cuts$breaks <- bins.getvals(cuts)
breakss<-numeric(nbins+1)
labelss<-character(nbins)
for(i in 1:nbins){
low = round(attr(cuts$breaks, "binlo")[i])
hi=round(attr(cuts$breaks, "binhi")[i])
if(low==hi){
labelss[i]<-as.character(low)
}
else{
labelss[i]<-paste(c(low, hi), collapse = " to ")
}
if(i==1){
breakss[1]<-low-1
breakss[2]<-hi
}else{
breakss[i+1]<-hi
}
}
#return(cut(data, breaks=breakss, labels=labelss))
return(list(breaks=breakss, labels=labelss))
}
_bins <- add_bins(nba_data2$Tkt_Face_Val_Amt,10)
bins <- add_bins(nba_data2$Tkt_Face_Val_Amt,10)
nba_data2$cuts<-cut(nba_data2$cuts, breaks=bins$breaks, labels=bins$labels)
bins$breaks
bins$labels
nba_data2$cuts<-cut(nba_data2$Tkt_Face_Val_Amt, breaks=bins$breaks, labels=bins$labels)
nba_data_agg2$cuts<-cut(nba_data_agg2$Tkt_Face_Val_Amt, breaks=bins$breaks, labels=bins$labels)
nba_data_agg2 = nba_data_agg[nba_data_agg$Tkt_Face_Val_Amt<500,]
nba_data_agg2$cuts<-cut(nba_data_agg2$Tkt_Face_Val_Amt, breaks=bins$breaks, labels=bins$labels)
toto = aggregate(nba_data_agg2, by=list(nba_data_agg2$atrcn_nm,nba_data_agg2$cuts ), FUN="length")
View(toto)
g <- ggplot(nba_data_agg2, aes(cuts))
g <- g + facet_wrap( ~ atrcn_nm)
g <- g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + geom_bar()
g <- ggplot(nba_data2, aes(cuts))
g <- g + facet_wrap( ~ atrcn_nm)
g <- g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + geom_bar()
nba_resale_data2 = nba_resale_data[nba_resale_data$Listing_Price<500,]
g <- ggplot(nba_resale_data2, aes(cuts))
g <- g + facet_wrap( ~ atrcn_nm)
g <- g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + geom_bar()
nba_resale_data2$cuts<-cut(nba_resale_data2$Tkt_Face_Val_Amt, breaks=bins$breaks, labels=bins$labels)
nba_resale_data2$cuts<-cut(nba_resale_data2$Listing_Price, breaks=bins$breaks, labels=bins$labels)
g <- ggplot(nba_resale_data2, aes(cuts))
g <- g + facet_wrap( ~ atrcn_nm)
g <- g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g + geom_bar()
