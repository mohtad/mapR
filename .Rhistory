;
")
head(data)
install.packages("RJDBC")
install.packages("RJDBC")
install.packages("RJDBC")
install.packages("RJDBC")
knitr::opts_chunk$set(echo = TRUE)
library(RJDBC)
drv = JDBC("com.teradata.jdbc.TeraDriver",
"C:\\teradata_drivers\\16.00\\terajdbc4.jar;C:\\teradata_drivers\\16.00\\tdgssconfig.jar")
conn = dbConnect(drv,"jdbc:teradata://tdprd.dw.bizsys.tmcs","mnadjar","mnadjar")
data =dbGetQuery(conn,"select FSA,penetration_pct, customer_cnt
FROM tlieu.feld_canada_fsa_report
where brand_engage_seq_id = 'DisneyIce-19-1026672351- 131188'
;
")
head(data)
plot(pressure)
?factor
data("iris")
data(iris)
?typeof
?factor
vect = c('a', 'b', 1)
typeof(vect)
fac =factor(c('a', 'b', 1))
fac =factor(c('a', 'b', 1), levels = c('a', 'b', 1))
fac =factor(c('a', 'b', 'c'))
fac =factor(c('c', 'b', 'a))
fac =factor(c('c', 'b', 'a), levels = c('b', 'a', 'c'))
fac =factor(c('c', 'b', 'a'), levels = c('b', 'a', 'c'))
fac =factor(c('c', 'b', 'a))
fac =factor(c('c', 'b', 'a'), levels = c('b', 'a', 'c'))
fac =factor(c('c', 'b', 'a'), levels = c('b', 'a', 'c'))
fac =factor(c('c', 'b', 'a','b'))
fac
drv = JDBC("com.teradata.jdbc.TeraDriver",
"C:\Rtraining\terajdbc4.jar;
C:\Rtraining\tdgssconfig.jar")
#change USER_NAME and PASSWORD
conn = dbConnect(drv,"jdbc:teradata://tdprd.dw.bizsys.tmcs","mnadjar","mnadjar")
drv = JDBC("com.teradata.jdbc.TeraDriver",
"C:\Rtraining\terajdbc4.jar;
C:\Rtraining\tdgssconfig.jar")
drv = JDBC("com.teradata.jdbc.TeraDriver",
"C:\Rtraining\terajdbc4.jar;C:\Rtraining\tdgssconfig.jar")
drv = JDBC("com.teradata.jdbc.TeraDriver",
"C:\\rtraining\\terajdbc4.jar;C:\\rtraining\\tdgssconfig.jar")
drv = JDBC("com.teradata.jdbc.TeraDriver",
"C:\\Rtraining\\terajdbc4.jar;C:\\Rtraining\\tdgssconfig.jar")
conn = dbConnect(drv,"jdbc:teradata://tdprd.dw.bizsys.tmcs","mnadjar","mnadjar")
m <- matrix(x, nrow = 3, ncol = 3)
vect = c('a', 'b', 'c')
l <- list(x = m, y = vect)
m <- matrix(1, nrow = 3, ncol = 3)
l <- list(x = m, y = vect)
miami_heat_daily_sales_per_Event =dbGetQuery(conn,"SELECT
event_id,
season,
secondary_atrcn_nm,
ven_nm,
ven_city_nm,
ven_state_nm,
ven_dma_nm,
event_dt,
onsale_dt,
cap_size_type_desc,
event_tot_cap,
event_tot_tkt_sold,
sale_dt,
SUM(tran_amt) AS tot_tran_amt,
AVERAGE(tkt_price) AS tkt_price,
SUM(tkt_qty) AS tot_tkt_qty
FROM plasb.miami_sales
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13")
miami_heat_daily_sales = dbGetQuery(conn,"SELECT
season,
sale_dt,
SUM(tran_amt) AS tot_tran_amt,
SUM(tkt_qty) AS tot_tkt_qty
FROM plasb.miami_sales
GROUP BY 1,2")
data =dbGetQuery(conn,"select top 10000
ult_party_id,
iac_consumer_link,
age_yr,
edu_val,
married_ind
from plivedb.tmdb_demo
;")
typeof(data$married_ind)
toto<-TRUE
typeof(toto)
data$married_id = as.logical(data$married_id)
as.logical(data$married_id)
toto = as.logical(data$married_id)
df <- data.frame(x = 1:3, y = c('a', 'b', 'c'), z (1,0,1))
df <- data.frame(x = 1:3, y = c('a', 'b', 'c'), z = C(1,0,1))
c(1,0,1)
df <- data.frame(x = 1:3, y = c('a', 'b', 'c'))
df <- data.frame(x = 1:3, z = C(1,0,1), y = c('a', 'b', 'c'))
?data.frame
df <- data.frame(x = 1:3, y = c('a', 'b', 'c'), z = c(1,0,1))
?logical
?boolean
df$z = as.logical(ds$z)
df$z = as.logical(df$z)
df <- data.frame(x = 1:3, y = c('a', 'b', 'c'), z = c(1,0,'NA'))
df <- data.frame(x = 1:3, y = c('a', 'b', 'c'), z = c(1,0,NA))
df$z = as.logical(df$z)
unique(data.married_ind)
unique(data$married_ind)
unique(data[2])
unique(data[3])
unique(data[5])
data$married_ind = as.logical(data$married_ind)
data$edu_val = as.factor(data$edu_val)
df2 <- data.frame(y = c('a', 'b'), z = (123,234))
left_join(df,df2,by = ('y'='y'))
library("ddplyr")
library("dplyr")
df2 <- data.frame(y = c('a', 'b'), z = (123,234))
left_join(df,df2,by = ('y'='y'))
df2 <- data.frame(y = c('a', 'b'), z = c(123,234))
left_join(df,df2,by = ('y'='y'))
left_join(df,df2,by = ('y'='y', 'z'=TRUE))
df2 <- data.frame(x = c(1,1,1), y = c('a', 'b'), z = c(123,234))
left_join(df,df2,by = ('y'='y', 'x'='x'))
left_join(df,df2,by = ('y'='y' & 'x'='x'))
left_join(df,df2,by = ('y'='y' && 'x'='x'))
left_join(df,df2,by = c('y'='y', 'x'='x'))
df2 <- data.frame(x = c(1,1,1), y = c('a', 'b'), z = c(123,234))
df2 <- data.frame(x = c(1,1), y = c('a', 'b'), z = c(123,234))
left_join(df,df2,by = c('y'='y', 'x'='x'))
data =dbGetQuery(conn,"SELECT
market_id,
zipcode,
FS_2016_all 	AS All_Subscribers_2016,
FS_2016_new   AS New_Subscribers_2016,
FS_2016_renew   AS Renewed_Subscribers_2016,
FS_2016_lapsed AS Lapsed_Subscribers_2016,
SINGLE_2015_all AS Single_Buyers_2015
FROM plasb.baa2_2016_zip_report
ORDER BY market_nm, zipcode
;
")
library(RJDBC)
drv = JDBC("com.teradata.jdbc.TeraDriver",
"C:\\teradata_drivers\\16.00\\terajdbc4.jar;C:\\teradata_drivers\\16.00\\tdgssconfig.jar")
conn = dbConnect(drv,"jdbc:teradata://tdprd.dw.bizsys.tmcs","mnadjar","mnadjar")
data =dbGetQuery(conn,"SELECT
market_id,
zipcode,
FS_2016_all 	AS All_Subscribers_2016,
FS_2016_new   AS New_Subscribers_2016,
FS_2016_renew   AS Renewed_Subscribers_2016,
FS_2016_lapsed AS Lapsed_Subscribers_2016,
SINGLE_2015_all AS Single_Buyers_2015
FROM plasb.baa2_2016_zip_report
ORDER BY market_nm, zipcode
;
")
?unique
data =dbGetQuery(conn,"SELECT
market_id,
zipcode,
FS_2016_all 	AS All_Sub_16,
FS_2016_new   AS New_Sub_16,
FS_2016_renew   AS Renew_Sub_16,
FS_2016_lapsed AS Laps_Sub_16,
SINGLE_2015_all AS Single_15
FROM plasb.baa2_2016_zip_report
ORDER BY market_nm, zipcode
;
")
data_baltimore = data[data$market_id=4,]
data_baltimore = data[data$market_id==4,]
unique(data.market_id)
unique(data$market_id)
data_baltimore = data[data$market_id==30,]
data_baltimore = data[data$market_id==5,]
data_baltimore = data[data$market_id==11,]
data_baltimore = data[data$market_id==22,]
dim(df)
ncol(df)
df[1,]
df
df[[2]]
?or
data_baltimore = data[data$market_id=4&data$market_id=5,]
data_baltimore = data[data$market_id==4&data$market_id==5,]
data_baltimore = data[data$market_id==4|data$market_id==5,]
data_baltimore$temp = 1
View(data_baltimore)
data_baltimore[nrow(data_baltimore)+1,] = c(99, '01011',0,0,0,0,0,1)
data_baltimore = data[data$market_id==4,]
nrow(data_baltimore)
data_baltimore[nrow(data_baltimore)+1,] = c(99, '01011',0,0,0,0,0,1)
?rbind
rbind(data_baltimore, c(99, '01011',0,0,0,0,0,1))
nrow(data_baltimore)
data_baltimore = data[data$market_id==4,]
nrow(data_baltimore)
data_baltimore=rbind(data_baltimore, c(99, '01011',0,0,0,0,0,1))
View(data_baltimore)
data_baltimore=cbind(data_baltimore,1)
ncol(data_baltimore)
names(data_baltimore)[8]
names(data_baltimore)[8] <- 'newname'
View(data_baltimore)
hist(data_baltimore$Single_15[data_baltimore$Single_15>2],breaks=20)
data_baltimore = data[data$market_id==4,]
hist(data_baltimore$Single_15[data_baltimore$Single_15>2],breaks=20)
hist(data_baltimore$Single_15[data_baltimore$Single_15>5],breaks=20)
quantile(data_baltimore$Single_15[data_baltimore$Single_15>1])
?quantile
quantile(data_baltimore$Single_15[data_baltimore$Single_15>1],  probs = c(0.1, 0.5, 1, 2, 5, 10, 50, NA)/100)
quantile(data_baltimore$Single_15[data_baltimore$Single_15>1],  probs = c(0.1, 0.5, 1, 2, 5, 10, 50)/100)
quantile(data_baltimore$Single_15[data_baltimore$Single_15>1],  probs = c(0.1, 0.5, 1, 2, 5, 10, 50,100)/100)
?aggregate
toto<-aggregate(data_baltimore, Single_15)
toto<-aggregate(data_baltimore, Single_15,FUN = sum
)
toto<-aggregate(data_baltimore, by=Single_15,FUN = sum)
toto<-aggregate(.~Single_15 = data_baltimore,FUN = sum)
toto<-aggregate(.~Single_15, data = data_baltimore,FUN = sum)
toto<-aggregate(.~Single_15, data = data_baltimore,FUN = frequency
)
toto<-aggregate(Single_15, data = data_baltimore,FUN = frequency
)
toto<-aggregate(data_baltimore$Single_15, data = data_baltimore,FUN = frequency)
toto<-aggregate(Single_15~, data = data_baltimore,FUN = frequency)
toto<-aggregate(Single_15~., data = data_baltimore,FUN = frequency)
toto<-aggregate(Single_15~., data = data_baltimore,FUN = length)
toto<-aggregate(data = data_baltimore$Single_15,FUN = frequency)
toto<-aggregate(data_baltimore$Single_15,FUN = frequency)
toto<-aggregate(data_baltimore$Single_15, by = data_baltimore$Single_15,FUN = frequency)
aggregate(Single_15 ~ ., data = data_baltimore$Single_15, FUN = length)
aggregate(Single_15, data = data_baltimore$Single_15, FUN = length)
aggregate(Single_15, data = data_baltimore, FUN = length)
aggregate(Single_15~., data = data_baltimore, FUN = length)
?distribution
?ftable
toto<-table(data_baltimore$Single_15)
toto
toto=as.data.frame(toto)
View(toto)
breaks=c(-1,0,20,100,200,300,442)
labels=c("0","1 to 20","21 to 100","101 to 200","201 to 300","301 to 442")
data_baltimore$Single_15_bins <- cut(data_baltimore$Single_15, breaks=breaks, labels=labels)
View(data_baltimore)
library(RJDBC)
drv = JDBC("com.teradata.jdbc.TeraDriver",
"C:\\teradata_drivers\\16.00\\terajdbc4.jar;C:\\teradata_drivers\\16.00\\tdgssconfig.jar")
conn = dbConnect(drv,"jdbc:teradata://tdprd.dw.bizsys.tmcs","mnadjar","mnadjar")
#data
data =dbGetQuery(conn,"SELECT
zipcode as id,
SINGLE_2015_all AS Single_Buyers_2015
FROM plasb.baa2_2016_zip_report
WHERE market_id =4
ORDER BY market_nm, zipcode
;
")
#map center
map_center =dbGetQuery(conn,"SELECT DISTINCT
venue_longitude as lon,
venue_latitude as lat
FROM plasb.baa2_2016_zip_report
WHERE market_id =4
;
")
names(map_center)[names(map_center)=="lon"] <- "long"
#locations to be added to the map
locations = data.frame(name=c("Children's Mercy Park"), long = c(-94.823686), lat = c(39.121296) )
locations = dbGetQuery(conn,"SELECT DISTINCT
venue as name,
venue_longitude as lon,
venue_latitude as lat
FROM plasb.baa2_2016_zip_report
WHERE market_id =4
;
")
names(locations)[names(locations)=="lon"] <- "long"
View(map_center)
shape_dir = "C:/Rtraining/shape/us/zcta/cb_2015_us_zcta510_500k"
shape_filename = "cb_2015_us_zcta510_500k"
identifier = "ZCTA5CE10"
shape_boundaries<-shapefile_to_df(shape_dir, shape_filename,identifier)
library("mapR", lib.loc="~/R/win-library/3.3")
shape_dir = "C:/Rtraining/shape/us/zcta/cb_2015_us_zcta510_500k"
shape_filename = "cb_2015_us_zcta510_500k"
identifier = "ZCTA5CE10"
shape_boundaries<-shapefile_to_df(shape_dir, shape_filename,identifier)
shape_dir = "C:/Rtraining/shape/us/zcta/cb_2015_us_zcta510_500k"
shape_filename = "cb_2015_us_zcta510_500k"
identifier = "ZCTA5CE10"
shape_boundaries<-shapefile_to_df(shape_dir, shape_filename,identifier)
library(RJDBC)
drv = JDBC("com.teradata.jdbc.TeraDriver",
"C:\Rtraining\terajdbc4.jar;C:\Rtraining\tdgssconfig.jar")
library(RJDBC)
drv = JDBC("com.teradata.jdbc.TeraDriver",
"C:/Rtraining/terajdbc4.jar;C:/Rtraining/tdgssconfig.jar")
conn = dbConnect(drv,"jdbc:teradata://tdprd.dw.bizsys.tmcs","mnadjar","mnadjar")
data =dbGetQuery(conn,"select top 10000
ult_party_id,
iac_consumer_link,
age_yr,
edu_val,
married_ind
from plivedb.tmdb_demo
;")
View(data)
View(data)
df <- data.frame(x = 1:3, y = c('a', 'b', 'c'))
View(df)
y = c('a', 'b', 'c')
y
df <- data.frame(x = 1:3, y = c('a', 'b', 'c'), z=(1,2,3))
df <- data.frame(x = 1:3, y = c('a', 'b', 'c'), z=c(1,2,3))
data$married_ind2 = as.logical(data$married_ind)
data[1,]
data[,1]
View(data)
data[7,4]
l = list(data, df,conn, drr)
n
?>list
?list
l = list(conn, drr)
l = list(conn, drv)
library("dplyr")
df2 <- data.frame(x = c(1,1,1), y = c('a', 'b'), z = c(123,234))
library("dplyr")
df2 <- data.frame(x = c(1,1,1), y = c('a', 'b', 'c'), z = c(123,234, 444))
library("dplyr")
df2 <- data.frame(x = c(1,1,1), y = c('a', 'b',NA), z = c(123,234,NA))
df3 = left_join(df,df2,by = c('y'='y'))
View(df3)
names(df3)[1] <- 'newname'
names(df3)[3] <- 'newname2'
data =dbGetQuery(conn,"SELECT
market_id,
zipcode,
FS_2016_all AS All_Sub_16,
FS_2016_new AS New_Sub_16,
FS_2016_renew AS Renew_Sub_16,
SINGLE_2015_all AS Single_15
FROM plasb.baa2_2016_zip_report
ORDER BY market_nm, zipcode
;"
)
View(data)
data$temp =1
View(data)
data_baltimore = data[data$market_id==4&data$Single_15>10,]
data_baltimore = data[data$market_id==4 & data$Single_15>10,]
hist(data_baltimore)
hist(data_baltimore$Single_15,breaks=20)
data_baltimore = data[data$market_id==4,]
hist(data_baltimore[data_baltimore$Single_15>10,]]$Single_15,breaks=20)
hist(data_baltimore[data_baltimore$Single_15>10,]$Single_15,breaks=20)
hist(data_baltimore[data_baltimore$Single_15>100,]$Single_15,breaks=20)
library(RJDBC)
drv = JDBC("com.teradata.jdbc.TeraDriver",
"C:/Rtraining/terajdbc4.jar;C:/Rtraining/tdgssconfig.jar")
conn = dbConnect(drv,"jdbc:teradata://tdprd.dw.bizsys.tmcs","mnadjar","mnadjar")
#data
data =dbGetQuery(conn,"SELECT
zipcode as id,
SINGLE_2015_all AS Single_Buyers_2015
FROM plasb.baa2_2016_zip_report
WHERE market_id =4
ORDER BY market_nm, zipcode
;"
)
#map center
map_center =dbGetQuery(conn,"SELECT DISTINCT
venue_longitude as lon,
venue_latitude as lat
FROM plasb.baa2_2016_zip_report
WHERE market_id =4
; ")
names(map_center)[names(map_center)=="lon"] <- "long"
#locations to be added to the map
locations = data.frame(name=c("Hippodrome"), long = c(-76.62109), lat = c(39.28956) )
locations = dbGetQuery(conn,"SELECT DISTINCT
venue as name,
venue_longitude as lon,
venue_latitude as lat
FROM plasb.baa2_2016_zip_report
WHERE market_id =4
; ")
names(locations)[names(locations)=="lon"] <- "long"
locations = data.frame(name=c("Hippodrome"), long = c(-76.62109), lat = c(39.28956) )
library(mapR)
breaks=c(-1,0,20,100,200,300,442)
labels=c("0","1 to 20","21 to 100","101 to 200","201 to 300","301 to 442")
data$bin <- create_bins(data$Single_Buyers_2015, nbins=NULL, bins=list(breaks=breaks, labels=labels))
shape_dir = "C:/Rtraining/shape/us/zcta/cb_2015_us_zcta510_500k"
shape_filename = "cb_2015_us_zcta510_500k"
identifier = "ZCTA5CE10"
shape_boundaries<-shapefile_to_df(shape_dir, shape_filename,identifier)
shape_dir = "C:/Rtraining/shape/us/roads/tl_2016_us_primaryroads"
shape_filename = "tl_2016_us_primaryroads"
identifier = "FULLNAME"
shape_roads<-shapefile_to_df(shape_dir, shape_filename,identifier)
save.image("C:/Rtraining/Rtraining.RData")
shape_dir = "C:/Rtraining/shape/us/roads/tl_2016_us_primaryroads"
shape_filename = "tl_2016_us_primaryroads"
identifier = "FULLNAME"
shape_roads<-shapefile_to_df(shape_dir, shape_filename,identifier)
us_zcta_path = "C:/Rtraining/zcta_coordinates/2015_Gaz_zcta_national.txt"
Bal_zipcodes<- read.csv(us_zcta_path, sep = "", colClasses=c("GEOID"="character"))
names(Bal_zipcodes)[names(Bal_zipcodes)=="GEOID"] <- "id"
names(Bal_zipcodes)[names(Bal_zipcodes)=="INTPTLAT"] <- "lat"
names(Bal_zipcodes)[names(Bal_zipcodes)=="INTPTLONG"] <- "long"
boundaries_coords<-boundaries_coords.df(Bal_zipcodes, map_center)
boundaries_coords<-boundaries_coords.df(Bal_zipcodes, map_center)
dist_center<-25
legend_title<-'All Singles'
zoom<-10
color_bins<-c("#ececec","#fcc5c0","#fa9fb5","#f768a1","#c51b8a","#7a0177")
map_baa_baltimore<-create_map(data=data,
shape_boundaries=shape_boundaries,
shape_roads=shape_roads,
boundaries_coords=boundaries_coords,
map_center,
dist_center,
locations,
legend_title,
zoom, color_bins = color_bins, FALSE)
remove.packages("mapR", lib="~/R/win-library/3.3")
library(mapR)
map_baa_baltimore<-create_map(data=data,
shape_boundaries=shape_boundaries,
shape_roads=shape_roads,
boundaries_coords=boundaries_coords,
map_center,
dist_center,
locations,
legend_title,
zoom, color_bins = color_bins, FALSE)
map_baa_baltimore<-create_map(data=data,
shape_boundaries=shape_boundaries,
shape_roads=shape_roads,
boundaries_coords=boundaries_coords,
map_center,
dist_center,
locations,
legend_title,
zoom, color_bins = color_bins, FALSE)
map_baa_baltimore
color_boundaries <- "white"
color_roads <- "steelblue4"
p<-create_map(data=data,
shape_boundaries=shape_boundaries,
shape_roads=shape_roads,
boundaries_coords=boundaries_coords,
map_center,
dist_center,
locations,
legend_title,
zoom, color_bins = color_bins, FALSE)
map_baa_baltimore
map_baa_baltimore<-create_map(data=data,
shape_boundaries=shape_boundaries,
shape_roads=shape_roads,
boundaries_coords=boundaries_coords,
map_center,
dist_center,
locations,
legend_title,
zoom,
color_boundaries,
color_bins = color_bins,
color_roads,
FALSE)
map_baa_baltimore
color_boundaries <- NULL #"white"
color_roads <- "steelblue4"
map_baa_baltimore<-create_map(data=data,
shape_boundaries=shape_boundaries,
shape_roads=shape_roads,
boundaries_coords=boundaries_coords,
map_center,
dist_center,
locations,
legend_title,
zoom,
color_boundaries,
color_bins = color_bins,
color_roads,
TRUE)
map_baa_baltimore
color_boundaries <- "" #"white"
map_baa_baltimore<-create_map(data=data,
shape_boundaries=shape_boundaries,
shape_roads=shape_roads,
boundaries_coords=boundaries_coords,
map_center,
dist_center,
locations,
legend_title,
zoom,
color_boundaries,
color_bins = color_bins,
color_roads,
TRUE)
map_baa_baltimore
